
// Description: Converts a published date and returns it in a relative format
// Require:     var relative_date = require('relative_date');
// Usage:       relative_date(#####);

module.exports = function(PublishedDate) {

    var published = Date.parse(new Date(PublishedDate)) / 1000;
    var current = Date.parse(new Date()) / 1000;
    var age = current - published;

    var minute = 60;
    var hour = (minute * 60);
    var day = (hour * 24);
    var week = (day * 7);
    var month = (week * 4);
    var year = (month * 12);

    var RelativeDate;

    //less than a minute
    RelativeDate = age + ' seconds ago';

    //over 1 minute
    if(age >= minute){
        RelativeDate = Math.floor(age / minute) + ' minute ago';
    }

    //over 2 minutes
    if(age >= (minute * 2)){
        RelativeDate = Math.floor(age / minute) + ' minutes ago';
    }

    //over 1 hour
    if(age >= hour){
        RelativeDate = Math.floor(age / hour) + ' hour ago';
    }

    //over 2 hours
    if(age >= (hour * 2)){
        RelativeDate = Math.floor(age / hour) + ' hours ago';
    }

    //over 1 day
    if(age >= day){
        RelativeDate = Math.floor(age / day) + ' day ago';
    }

    //over 2 days
    if(age >= (day * 2)){
        RelativeDate = Math.floor(age / day) + ' days ago';
    }

    //over 1 week
    if(age >= week){
        RelativeDate = Math.floor(age / week) + ' week ago';
    }

    //over 2 weeks
    if(age >= (week * 2)){
        RelativeDate = Math.floor(age / week) + ' weeks ago';
    }

    //over 1 month
    if(age >= month){
        RelativeDate = Math.floor(age / month) + ' month ago';
    }

    //over 2 months
    if(age >= (month * 2)){
        RelativeDate = Math.floor(age / month) + ' months ago';
    }

    //over 1 year
    if(age >= year){
        RelativeDate = Math.floor(age / year) + ' year ago';
    }

    //over 2 years
    if(age >= (year * 2)){
        RelativeDate = Math.floor(age / year) + ' years ago';
    }

    return RelativeDate;
};